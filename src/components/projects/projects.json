{
  "projects": [
    {
      "title": "Singapore Residential Parking App",
      "bodyText": "- React Native app for parking in Singapore\n - Dijkstra's shortest path for route optimization\n - Machine learning algorithms for predictive parking\n - Real-time user data management\n - AI Chatbot for natural language processing",
      "overview": "A React Native mobile app for crowd-sourced parking in residential areas across Singapore. This innovative solution incorporates the following key features: Efficient Route Optimization, Predictive Parking, Real-Time Data Management, and AI Chatbot Assistance. Implements Dijkstra's shortest path algorithm using cached map data to optimize driving routes, reducing reliance on external mapping services. Employs cluster machine learning algorithms, including scikit-learn, to predict parking spot availability, making parking hassle-free for users. The AI Chatbot, powered by RAG, Anthropic Claude LLM API, and LLM prompts, provides natural language processing capabilities, enhancing user interactions and answering parking-related queries. Seamlessly manages real-time user-generated data, ensuring accurate and up-to-date information.",
      "links": [
        {
          "text": "GitHub",
          "href": "https://github.com/gpower-crypto/Residential-Parking-Moblie-App"
        },
        {
          "text": "Readme",
          "href": "https://github.com/gpower-crypto/Residential-Parking-Moblie-App#readme"
        }
      ],
      "techStacksAndFrameworks": [
        "React Native",
        "Google Maps API",
        "Expo",
        "Python",
        "scikit-learn library"
      ],
      "tags": [
        "React Native",
        "JavaScript",
        "Machine Learning",
        "Dijkstra's Algorithm"
      ]
    },
    {
      "title": "Residential Parking API",
      "overview": "The Residential Parking API is tailored to assist users in finding available parking spots within residential areas. It utilizes machine learning models to predict parking spot availability based on parameters such as location, day, and time. Additionally, the API offers features to retrieve nearby residential area information. The service also includes an AI chatbot feature for parking assistance, enhancing user interaction and providing a seamless experience.",
      "bodyText": " - Developed an API for predicting parking availability in residential areas.\n - Utilized machine learning models for accurate availability forecasts based on user-provided parameters.\n - Integrated database functionalities to manage parking spot and residential area data.\n - Enabled users to contribute and update parking availability data for better predictions.\n - Implemented robust error handling for effective error responses.\n - Integrated an AI chatbot feature for providing parking assistance and enhancing user interaction.",
      "links": [
        {
          "text": "GitHub",
          "href": "https://github.com/gpower-crypto/Residential-Parking-API"
        },
        {
          "text": "Readme",
          "href": "https://github.com/gpower-crypto/Residential-Parking-API#readme"
        }
      ],
      "techStacksAndFrameworks": [
        "Node.js",
        "Express.js",
        "Python",
        "Machine Learning",
        "SQLite Database Integration"
      ],
      "tags": [
        "Residential Parking",
        "Parking Availability Prediction",
        "Machine Learning",
        "Database Integration",
        "API Development"
      ]
    },
    {
      "title": "Social Network Application",
      "bodyText": "- Social network web app\n - User registration and posting updates\n - Responsive UI and RESTful APIs",
      "overview": "The Social Network Application is a comprehensive web-based platform designed to facilitate social interactions, including user registration and authentication, real-time chat, posting, commenting, and friend requests. The project encompasses both frontend and backend implementations, utilizing Django for the backend and React for the frontend. It offers a dynamic and engaging user experience with a wide range of features for social networking.",
      "links": [
        {
          "text": "GitHub (Frontend)",
          "href": "https://github.com/gpower-crypto/Social-Network---Frontend"
        },
        {
          "text": "GitHub (Backend)",
          "href": "https://github.com/gpower-crypto/Social-Network---Backend"
        },
        {
          "text": "Readme - Frontend",
          "href": "https://github.com/gpower-crypto/Social-Network---Frontend#readme"
        },
        {
          "text": "Readme - Backend",
          "href": "https://github.com/gpower-crypto/Social-Network---Backend#readme"
        }
      ],
      "techStacksAndFrameworks": [
        "Django (Backend)",
        "React (Frontend)",
        "WebSocket (Django Channels for real-time chat)",
        "REST Framework (Django REST framework for API endpoints)"
      ],
      "tags": [
        "Web Development",
        "Node.js",
        "Express.js",
        "HTML",
        "CSS",
        "JavaScript"
      ]
    },
    {
      "title": "Parking App",
      "overview": "The Parking Solution App is focused on providing a user-friendly approach to parking. It utilizes the device's GPS to offer precise location data, allowing users to identify parking spots with accuracy. The accelerometer sensor is harnessed to create a compass-like arrow for user orientation. The application securely manages user preferences and storage with AsyncStorage. Smooth navigation and screen transitions are made possible through React Navigation.",
      "bodyText": " - A React Native mobile app designed for streamlined parking solutions using location services, accelerometer, and external APIs.\n - Key components include location services, accelerometer, storage, and navigation.",
      "links": [
        {
          "text": "GitHub",
          "href": "https://github.com/gpower-crypto/SINGAPORE-PARKING-APP"
        },
        {
          "text": "Readme",
          "href": "https://github.com/gpower-crypto/SINGAPORE-PARKING-APP#readme"
        }
      ],
      "techStacksAndFrameworks": ["React Native", "Expo", "Google Maps API"],
      "tags": ["React Native", "Expo", "Google Maps API", "React Navigation"],
      "images": [
        "https://example.com/image1.jpg",
        "https://example.com/image2.jpg"
      ],
      "video": "7oneop5aIJU"
    },
    {
      "image": "images/projects/portfolio-poster.png",
      "title": "Dev Portfolio",
      "bodyText": "- Developer Portfolio Website made in React\n -  Fully customisable and dynamic, easily change data and images.\n - Dark Mode Support",
      "links": [
        {
          "text": "GitHub",
          "href": "https://github.com/mayankagarwal09/dev-portfolio"
        },
        {
          "text": "Live",
          "href": "https://mayankagarwal.me"
        },
        {
          "text": "Readme",
          "href": "https://github.com/gpower-crypto/SINGAPORE-PARKING-APP/blob/main/README.md"
        }
      ],
      "techStacksAndFrameworks": [
        "Django (Backend)",
        "React (Frontend)",
        "WebSocket (Django Channels for real-time chat)",
        "REST Framework (Django REST framework for API endpoints)"
      ],
      "tags": ["React", "Portfolio", "JavaScript"]
    },
    {
      "title": "Advisorbot",
      "overview": "AdvisorBot is a command-line interface (CLI) application designed for currency trading. It matches bids to asks, provides real-time trend analysis, and offers valuable insights for traders. The bot leverages advanced algorithms and data analysis to assist users in making informed trading decisions.",
      "bodyText": " - Advisorbot is a C++ program that integrates real-time market data analysis with user command handling.\n - Key components include OrderBook management, CSV data reading, and command parsing.",
      "links": [
        {
          "text": "GitHub",
          "href": "https://github.com/gpower-crypto/Advisorbot"
        },
        {
          "text": "Readme",
          "href": "https://github.com/gpower-crypto/Advisorbot#readme"
        }
      ],
      "techStacksAndFrameworks": ["C++", "STL (Standard Template Library)"],
      "tags": ["C++", "Financial Analysis", "Command-Line Tool"],
      "images": [
        "https://example.com/advisorbot/image1.jpg",
        "https://example.com/advisorbot/image2.jpg"
      ],
      "video": "CQJYU86TiwM"
    },
    {
      "title": "Otodecks",
      "overview": "Otodecks is a DJ application that offers advanced features for audio playback, mixing, and track management. It provides users with the ability to load, play, mix, and manipulate audio tracks. The application features custom deck control components with unique graphics and a music library component to manage and load music tracks. The custom graphics, waveform displays, and various control options enhance the user's DJing experience.",
      "bodyText": " - C++ DJ application built with the JUCE framework.\n - DJAudioPlayer for loading and playing audio tracks.\n - Custom DeckGUI with unique graphics and advanced playback controls.\n - PlaylistComponent for managing a music library, adding tracks, and searching for files.\n - Custom GUI layout with extra controls and a unique design.",
      "links": [
        {
          "text": "GitHub",
          "href": "https://github.com/gpower-crypto/OtoDecks"
        },
        {
          "text": "Readme",
          "href": "https://github.com/gpower-crypto/OtoDecks#readme"
        }
      ],
      "techStacksAndFrameworks": ["C++", "JUCE Framework"],
      "tags": [
        "DJ Application",
        "Audio Playback",
        "Music Library",
        "GUI Design",
        "Object-Oriented Programming"
      ],
      "images": [
        "https://example.com/image1.jpg",
        "https://example.com/image2.jpg"
      ],
      "video": "UQCuWZUOkq8"
    },
    {
      "title": "Music Visualizer",
      "overview": "The Music Visualizer project is an imaginative application that harnesses the power of the p5.js library to create mesmerizing visual interpretations of music. This project includes four captivating extensions: 'Circular Visual', 'Bumpy Sphere', 'Firework Beats', and 'Perlin Noise Terrain'. These extensions provide users with unique and visually compelling ways to experience music. 'Circular Visual' introduces mesmerizing circular patterns, particle systems, and a circular spectrum for dynamic audio visualization. 'Bumpy Sphere' takes audio to the next dimension by transforming it into captivating 3D shapes. The 'Firework Beats' extension detects audio beats and presents them in a dazzling fireworks display, creating a visually immersive music experience. 'Perlin Noise Terrain' uses the p5.js noise function to create a 3D terrain that visualizes audio amplitude, with adjustable parameters to customize the experience.",
      "bodyText": " - Utilizes p5.js to create captivating music visualizations.\n - 'Circular Visual' offers circular patterns, particle systems, and circular spectrum.\n - 'Bumpy Sphere' transforms audio into captivating 3D shapes.\n - 'Firework Beats' visually represents audio beats with a fireworks display.\n - 'Perlin Noise Terrain' visualizes audio as a dynamic 3D terrain with adjustable parameters.",
      "links": [
        {
          "text": "GitHub",
          "href": "https://github.com/gpower-crypto/Music-Visualiser"
        },
        {
          "text": "Readme",
          "href": "https://github.com/gpower-crypto/Music-Visualiser#readme"
        }
      ],
      "techStacksAndFrameworks": ["p5.js", "JavaScript", "3D Visualization"],
      "tags": ["Music Visualizer", "p5.js", "Audio Visualization", "3D Shapes"],
      "images": [
        "https://example.com/image1.jpg",
        "https://example.com/image2.jpg"
      ],
      "video": "UcHSIe-mfGw"
    },
    {
      "title": "Health Application - Agile Development",
      "overview": "The Health Application - Agile Development project is a collaborative effort developed by a myself and my peers in college for a course project. It aims to create a user-friendly health management application tailored for the elderly. The project focuses on providing essential features such as online appointment booking, medical records management, and emergency assistance. Developed using agile methodologies, the application aims to streamline healthcare access and enhance the user experience for older adults. The project showcases the team's proficiency in web development, database management, and user interface design within the context of healthcare services for senior citizens.",
      "bodyText": " - Analyzed and implemented essential features for an agile health management application.\n - Created user-friendly interfaces for appointment booking, medical records, and emergency assistance.\n - Developed a comprehensive database structure for storing user information and appointment data.\n - Utilized agile methodologies to ensure iterative development and efficient collaboration within the team.",
      "links": [
        {
          "text": "GitHub",
          "href": "https://github.com/gpower-crypto/Health-Application"
        },
        {
          "text": "Readme",
          "href": "https://github.com/gpower-crypto/Health-Application#readme"
        }
      ],
      "techStacksAndFrameworks": [
        "HTML",
        "CSS",
        "JavaScript",
        "Node.js",
        "Express.js",
        "MySQL",
        "Bootstrap"
      ],
      "tags": [
        "Health Application",
        "Agile Development",
        "Web Development",
        "Database Management",
        "User Interface Design"
      ],
      "images": [
        "https://example.com/image1.jpg",
        "https://example.com/image2.jpg"
      ],
      "video": "wivZEzLJeZY"
    },
    {
      "title": "Exploring a Superstore's Sales Data",
      "overview": "The 'Exploring a Superstore's Sales Data' project involves a comprehensive analysis of a superstore's sales dataset. This dataset, originally sourced from Tableau, offers insights into the sales of a wide variety of products by a large superstore. The analysis aims to uncover valuable information about customer behavior, regional trends, and product categories. By examining this dataset, we gain a deeper understanding of the dynamics of the superstore's operations and identify key areas for potential business growth and optimization. This project serves as a hands-on exploration of data analysis and visualization within the context of a publicly available dataset.",
      "bodyText": "- Imported and validated dataset for analysis.\n- Conducted exploratory data analysis to identify trends.\n- Analyzed sales, profit, and customer segments.\n- Investigated top-selling product categories.\n- Explored preferred shipping modes for customer segments.\n- Identified profitable regions and cities.\n- Examined sales and profit trends over time.\n- Summarized key insights for business strategies.",
      "links": [
        {
          "text": "GitHub",
          "href": "https://github.com/gpower-crypto/Superstore-Sales-Data-analysis"
        },
        {
          "text": "Readme",
          "href": "https://github.com/gpower-crypto/Superstore-Sales-Data-analysis#readme"
        }
      ],
      "techStacksAndFrameworks": [
        "Python",
        "Pandas",
        "Matplotlib",
        "Seaborn",
        "Jupyter Notebook"
      ],
      "tags": [
        "Data Analysis",
        "Exploratory Data Analysis",
        "Data Visualization",
        "Python",
        "Pandas",
        "Matplotlib",
        "Seaborn",
        "Jupyter Notebook"
      ],
      "images": [
        "https://example.com/image1.jpg",
        "https://example.com/image2.jpg"
      ]
    },
    {
      "title": "Order Sales Data Analysis and Web Application",
      "overview": "The Order Sales Data Analysis and Web Application project focuses on comprehensive analysis and modeling of order sales data. This dataset, sourced from Kaggle, serves as the basis for building a MySQL database and a web application. Through this project, the aim is to delve into the dynamics of customer behavior, regional trends, and product categories. By leveraging the data, the team seeks to extract valuable insights into sales patterns and customer preferences within the context of a fictional order sales dataset. Additionally, the project aims to illustrate the practical application of database structures and web development to present meaningful information derived from the data. This initiative is designed to offer a hands-on learning experience in data management, modeling, and web application development within the context of an open dataset environment.",
      "bodyText": " - Analyzed and modeled order sales data from an open dataset.\n - Created an Entity-Relationship (E/R) model for the data structure and adjusted it for relational implementation.\n - Constructed a MySQL database for the data structure and populated it with instance data.\n - Developed a simple web application using Node.js to illustrate data and answer specific questions.",
      "links": [
        {
          "text": "GitHub",
          "href": "https://github.com/gpower-crypto/Order-Sales-Data-Analysis-and-Web-Application"
        },
        {
          "text": "Readme",
          "href": "https://github.com/gpower-crypto/Order-Sales-Data-Analysis-and-Web-Application#readme"
        }
      ],
      "techStacksAndFrameworks": [
        "Node.js",
        "Express.js",
        "MySQL",
        "HTML",
        "CSS"
      ],
      "tags": [
        "Data Analysis",
        "Web Application",
        "Node.js",
        "Express.js",
        "MySQL",
        "HTML",
        "CSS"
      ],
      "images": [
        "https://example.com/image1.jpg",
        "https://example.com/image2.jpg"
      ]
    },
    {
      "title": "My Smart Home",
      "overview": "MySmartHome is a dynamic web application designed to help users monitor and control smart home devices. While it's a prototype and doesn't interface with actual hardware, it provides a range of essential features. Users can add various smart home devices like heating systems, curtains, lighting, security, audio-visual equipment, and kitchen appliances. Custom device naming and real-time status monitoring are included, allowing users to control these virtual devices effortlessly.",
      "bodyText": " - A dynamic web application for managing virtual smart home devices. \n - Enables users to add, name, monitor, and control various virtual devices.\n - Implements client-side form validation for data accuracy.\n - Provides a device status page for tracking device statuses.\n - Utilizes server-side functionality for device management.\n - Offers an intuitive navigation system for user-friendly interaction.",
      "links": [
        {
          "text": "GitHub",
          "href": "https://github.com/gpower-crypto/My-Smart-Home"
        },
        {
          "text": "Readme",
          "href": "https://github.com/gpower-crypto/My-Smart-Home#readme"
        }
      ],
      "techStacksAndFrameworks": [
        "Node.js",
        "Express.js",
        "EJS",
        "MySQL",
        "CSS"
      ],
      "tags": [
        "Web Application",
        "Smart Home",
        "Node.js",
        "Express.js",
        "MySQL",
        "EJS"
      ],
      "images": [
        "https://example.com/image1.jpg",
        "https://example.com/image2.jpg"
      ],
      "video": "IeB7C7QYJXc"
    },
    {
      "title": "Django RESTful Web Application - Protein and Taxonomy Management",
      "overview": "The Django RESTful Web Application project focuses on creating and managing taxonomy data, protein sequences, proteins, protein domains, and their relationships. This application provides a robust and efficient system to organize and query biological data for research and analysis. The project leverages Django's capabilities for building RESTful APIs and managing complex data structures. It includes well-defined data models, a user-friendly Django admin interface for data management, API endpoints for retrieving detailed information, and unit tests for validation. The application serves as a valuable tool for scientists and researchers in the field of biology and bioinformatics.",
      "bodyText": " - Defined data models, configured the Django admin interface, and populated the database. \n - Implemented serializer classes for data conversion, validation, and processing.\n - Created API endpoints for retrieving taxonomy, protein, and domain details, including coverage calculations.\n - Conducted unit tests to ensure the application's functionality and validity.\n ",
      "links": [
        {
          "text": "GitHub",
          "href": "https://github.com/gpower-crypto/Django-RESTful-Web-Application"
        },
        {
          "text": "Readme",
          "href": "https://github.com/gpower-crypto/Django-RESTful-Web-Application#readme"
        }
      ],
      "techStacksAndFrameworks": ["Django", "Django REST framework", "Python"],
      "tags": [
        "Django",
        "RESTful API",
        "Biology",
        "Django Admin",
        "Unit Testing"
      ],
      "images": [
        "https://example.com/image1.jpg",
        "https://example.com/image2.jpg"
      ],
      "video": "ODTJIP7uUic"
    },
    {
      "title": "React Native Calculator App",
      "overview": "The React Native Calculator App is a versatile mobile application that provides users with a feature-rich calculator for performing arithmetic calculations. This app allows users to input numerical values, perform addition, subtraction, multiplication, division, and other mathematical operations. It offers a user-friendly interface for effortless calculation and includes functionalities such as clear, negation, and percentage calculations.",
      "bodyText": " - Implemented a fully functional calculator app in React Native.\n - Provided a user-friendly interface for easy data input and calculation operations.\n - Supported clear, negation, and percentage calculation functionalities.\n - Styled the app with a visually appealing and responsive design.",
      "links": [
        {
          "text": "GitHub",
          "href": "https://github.com/gpower-crypto/Calculator-App"
        },
        {
          "text": "Readme",
          "href": "https://github.com/gpower-crypto/Calculator-App#readme"
        }
      ],
      "techStacksAndFrameworks": ["React Native", "JavaScript"],
      "tags": [
        "Calculator App",
        "React Native",
        "Mobile App Development",
        "Arithmetic Operations"
      ],
      "images": [
        "https://example.com/screenshot1.jpg",
        "https://example.com/screenshot2.jpg"
      ]
    },
    {
      "title": "Your Magazine",
      "overview": "Your Magazine is a digital news magazine covering a wide range of topics including technology, sports, and politics. The website is designed to provide users with the latest news and articles in an engaging and accessible manner. It features a responsive design, making it suitable for various devices, and it prioritizes usability and accessibility. Your Magazine aims to deliver a seamless and informative reading experience to its audience.",
      "bodyText": "- A digital news magazine covering technology, sports, and politics.\n - Fully responsive design for cross-device compatibility.\n - Focus on accessibility and usability for an enhanced user experience.",
      "links": [
        {
          "text": "GitHub",
          "href": "https://github.com/gpower-crypto/Your-Magazine-website.git"
        },
        {
          "text": "Readme",
          "href": "https://github.com/gpower-crypto/Your-Magazine-website/tree/main#readme"
        }
      ],
      "techStacksAndFrameworks": ["HTML", "CSS", "Bootstrap"],
      "tags": [
        "Digital Magazine",
        "Responsive Design",
        "Accessibility",
        "Usability"
      ],
      "images": [
        "https://example.com/image1.jpg",
        "https://example.com/image2.jpg"
      ],
      "video": "https://youtu.be/your-magazine-video"
    }
  ]
}
